#!/bin/bash
#Copyright (c) <2019> <James Carroll>

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

server="http://oldschool.runescape.com/jav_config.ws"	
# This is the bootstrap file the launcher uses to setup the client.
# It can be modified by the user to choose a specific world to launch every boot, if desired.

networkError="Unable to connect to Jagex servers"
fileError="The download process has failed unexpectedly. Please raise a Github issue, as this is likely a serious fault. (Unknown file format)"

launcher=".os-1.jar"	# When a new launcher is available, increment this string and push a new revision, so that all existing clients will update to it.
# The exact string has no significance, as long as it is unique. This does mean newer launchers might have older names if the upstream version changes.
# Whether the variable needs changing in any given scenario requires manual assessment.

genericDownloadError="The download process has failed unexpectedly. Please raise a Github issue, as this is likely a serious fault."


function notify(){
        xmessage -center -timeout 60 -title RuneScape "$*"
}



DownloadOSRS(){
	echo Downloading OSRS package

	# Check the connection succeeds. Since this uses HTTPS, the DMG file is transparently checked for validity.
	if ! wget "https://www.runescape.com/downloads/OldSchool.dmg" -O "/tmp/osrs.dmg"	
	then 
		echo -e "\nFailed to get osrs.dmg\n"
		notify "${networkError}"
		exit 1
	fi
	if ! "${SNAP}/usr/lib/p7zip/7z" x "/tmp/osrs.dmg" -o"/tmp/osrs-dmg/" -aoa	# Extract the DMG. Non-success is likely due to the DMG file being upgraded to APFS over HFS+.
	then
		echo -e "\nFailed to extract osrs.dmg\n"
		notify "${fileError}"
		exit 1
	fi
	cp "/tmp/osrs-dmg/Old School RuneScape/Old School RuneScape.app/Contents/Java/jagexappletviewer.jar" "${SNAP_USER_COMMON}/${launcher}"
}

# shellcheck disable=SC1090
if [[ -f "${SNAP_USER_DATA}/osrs-user-config" ]]
then
	echo -e "\nExecuting osrs-user-config\n"
	source "${SNAP_USER_DATA}/osrs-user-config"	# User can add exports/vars, such as changing $server, adding Java overrides, etc.
	echo -e "\nFinished executing osrs-user-config\n"
fi

if [[ ! -f "${SNAP_USER_COMMON}/${launcher}" ]]	# Check if the launcher needs updating
then
	echo -e "\nCouldn't find Jagex launcher, grabbing a fresh copy\n"
	DownloadOSRS
	if [[ ! -f ${SNAP_USER_COMMON}/${launcher} ]]
	then
		echo -e "\n${genericDownloadError}\n" 	# General consistency checking
		notify "${genericDownloadError}"
		exit 1
	fi
fi

function PrintHelp(){
	echo -e "\nAccepted parameters:\n"
	echo -e "\n-w <number> connect to a specific world\n"
	echo -e "\n-s <number> override UI scale (may only support integers on some machines)\n"
	echo -e "\n-h prints this message\n"
}

while getopts ":w:hs:" opt; do
	case ${opt} in
		w )	# Connect to a specific world
			echo -e "\nAttempting to connect directly to world ${OPTARG}"
			server="http://oldschool${OPTARG}.runescape.com/k=5/l=0/jav_config.ws"
			;;
		s )	# Set UI scale
			echo -e "\nSet GDK_SCALE to ${OPTARG}"
			export GDK_SCALE=${OPTARG}
			;;
		h )	# Print help
			PrintHelp
			exit
			;;
		: )	# Missing parameter to option
			echo -e "\n-${OPTARG} requires an parameter!"
			PrintHelp
			exit 2
			;;
		\? )	# Unknown option
			echo -e "\nUnknown arguement ${OPTARG}"
			PrintHelp
			exit 2
			;;
	esac
done

echo -e "\nLaunching OSRS\n"
"${SNAP}/usr/lib/jvm/default-java/bin/java" --patch-module java.desktop=$SNAP/java-patches/compiled/java.desktop  -Duser.home="${SNAP_USER_COMMON}" -Djava.system.class.loader=app.systemclassloader -Dcom.jagex.config="${server}" -Xmx512m -cp "${SNAP_USER_COMMON}/${launcher}" jagexappletviewer "."
