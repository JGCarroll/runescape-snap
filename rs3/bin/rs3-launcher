#!/bin/bash
#Copyright (c) <2019> <James Carroll>

#Permission is hereby granted, free of charge, to any person obtaining a copy
#of this software and associated documentation files (the "Software"), to deal
#in the Software without restriction, including without limitation the rights
#to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#copies of the Software, and to permit persons to whom the Software is
#furnished to do so, subject to the following conditions:

#The above copyright notice and this permission notice shall be included in all
#copies or substantial portions of the Software.

#THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#SOFTWARE.

source setup-sandbox
server=http://www.runescape.com/k=5/l=\$\(Language:0\)/jav_config.ws
latestLauncher=launcher-2.2.6

function DownloadRS3(){
	repoRoot="http://content.runescape.com/downloads/ubuntu/"
	repo="http://content.runescape.com/downloads/ubuntu/dists/trusty/"

	# Does not overwrite any existing key in the event the public key is changed.
	echo Importing Jagex Signing key
	gpg --batch --import "$SNAP/runescape.gpg.key" 

	# Clear up previous runs
	echo Clearing previous installers
	rm -rf "$SNAP_USER_COMMON/runescape" "${SNAP_USER_COMMON:?}/usr" "$SNAP_USER_COMMON/Release" "$SNAP_USER_COMMON/Release.gpg" "$SNAP_USER_COMMON/Packages" "$SNAP_USER_COMMON/rs.deb"

	echo "Downloading RuneScape repository info"
	wget "$repo"Release -O "$SNAP_USER_COMMON/Release"

	echo "Downloading RuneScape repository info signature"
	wget "$repo"Release.gpg -O "$SNAP_USER_COMMON/Release.gpg"

	if ! gpg --batch --verify "$SNAP_USER_COMMON/Release.gpg" "$SNAP_USER_COMMON/Release"
	then
		notify-send 'RuneScape snap' 'Unable to perform first time setup, is the network fully functional?' -t 10 
		exit 1
	fi
	echo "Repository metadata looks valid"
	
	packageFileHash=$(awk '/SHA256:/ {sha=1} ; sha == 1 && $NF == "non-free/binary-amd64/Packages" {print $1; exit}' "$SNAP_USER_COMMON/Release")

	echo "Downloading repository package list"
	wget "$repo"non-free/binary-amd64/Packages -O "$SNAP_USER_COMMON/Packages"

	if [[ $packageFileHash != $(sha256sum "$SNAP_USER_COMMON/Packages" | cut -d " " -f 1) ]]
	then
		notify-send 'RuneScape snap' 'Unable to perform first time setup, is the network fully functional?' -t 10 
		exit 1
	fi
	echo "Repository package list looks valid"

	debFile=$(awk ' /Package: runescape-launcher/ {rs=true}; rs == true && /Filename:/ {print $2; exit}' $SNAP_USER_COMMON/Packages )
	debHash=$(awk ' /Package: runescape-launcher/ {rs=true}; rs == true && /SHA256:/ {print $2; exit}' $SNAP_USER_COMMON/Packages)

	echo "Downloading RuneScape launcher"
	wget "$repoRoot$debFile" -O "$SNAP_USER_COMMON/rs.deb"

	if [[ $debHash != $(sha256sum "$SNAP_USER_COMMON/rs.deb" | cut -d " " -f 1) ]]
	then 
		notify-send 'RuneScape snap' 'Unable to perform first time setup, is the network fully functional?' -t 10 
		exit 1
	fi
	echo "Launcher looks valid"

	#Extract the files and put them into the right place
	dpkg-deb -x "$SNAP_USER_COMMON/rs.deb" "$SNAP_USER_COMMON/"
	mv "$SNAP_USER_COMMON/usr/share/games/runescape-launcher/runescape" "$SNAP_USER_COMMON/$latestLauncher"

	echo "Clearing up downloads"
	rm -rf "${SNAP_USER_COMMON:?}/usr" "$SNAP_USER_COMMON/Release" "$SNAP_USER_COMMON/Release.gpg" "$SNAP_USER_COMMON/Packages" "$SNAP_USER_COMMON/rs.deb"
	
}
function SetupDirs(){
	echo "Directing cache to $SNAP_USER_COMMON"
	# Set up the cache location to exist in $SNAP_USER_COMMON rather than $HOME, preventing disk waste on upgrades when $HOME is snapshot.
	mkdir "$SNAP_USER_COMMON/rs3cache/" -p
	mkdir "$SNAP_USER_DATA/Jagex/launcher/" -p
	echo cache_folder="$SNAP_USER_COMMON"/rs3cache/ > "$SNAP_USER_DATA/Jagex/launcher/preferences.cfg"
	echo user_folder="$SNAP_USER_COMMON"/rs3cache/ >> "$SNAP_USER_DATA/Jagex/launcher/preferences.cfg"
}

if [[ -f "$SNAP_USER_DATA/rs3-user-config" ]]
then
        echo "Found RS3 config"
        source "$SNAP_USER_DATA/rs3-user-config" # User can add exports/vars
        echo "Finished reading RS3 config"
fi

unset XMODIFIERS

if [[ ! -f "$SNAP_USER_COMMON/$latestLauncher" ]]
then
	echo "Launcher doesn't appear to exist, running setup!" 
	DownloadRS3
	SetupDirs
fi

#Execute game
echo "Launching RuneScape"
if [[ -z $@ ]]; then
	$SNAP_USER_COMMON/$latestLauncher --configURI  $server
else
	$SNAP_USER_COMMON/$latestLauncher --configURI "$@"
fi
